{"ast":null,"code":"var _jsxFileName = \"A:\\\\webinar\\\\React - GoIT\\\\Projekty na GitHuba\\\\goit-react-hw-04-feedback\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    total,\n    positive\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Good: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Neutral: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Bad: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Positive feedback: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${positive}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positive: PropTypes.number.isRequired\n};\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["A:/webinar/React - GoIT/Projekty na GitHuba/goit-react-hw-04-feedback/src/components/Statistics/Statistics.jsx"],"names":["PropTypes","Statistics","good","neutral","bad","total","positive","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,UAAU,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,GAA4C;AAC9D,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAaE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAiBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAQ,GAAEC,QAAS;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBD;;KAAML,U;AA2BNA,UAAU,CAACM,SAAX,GAAuB;AACrBL,EAAAA,IAAI,EAAEF,SAAS,CAACQ,MAAV,CAAiBC,UADF;AAErBN,EAAAA,OAAO,EAAEH,SAAS,CAACQ,MAAV,CAAiBC,UAFL;AAGrBL,EAAAA,GAAG,EAAEJ,SAAS,CAACQ,MAAV,CAAiBC,UAHD;AAIrBJ,EAAAA,KAAK,EAAEL,SAAS,CAACQ,MAAV,CAAiBC,UAJH;AAKrBH,EAAAA,QAAQ,EAAEN,SAAS,CAACQ,MAAV,CAAiBC;AALN,CAAvB;AAQA,eAAeR,UAAf","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positive }) => {\n  return (\n    <ul>\n      <li>\n        <span>Good: </span>\n        <span>{good}</span>\n      </li>\n      <li>\n        <span>Neutral: </span>\n        <span>{neutral}</span>\n      </li>\n      <li>\n        <span>Bad: </span>\n        <span>{bad}</span>\n      </li>\n      <li>\n        <span>Total: </span>\n        <span>{total}</span>\n      </li>\n      <li>\n        <span>Positive feedback: </span>\n        <span>{`${positive}%`}</span>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positive: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}