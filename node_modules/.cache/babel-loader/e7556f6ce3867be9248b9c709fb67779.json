{"ast":null,"code":"var _jsxFileName = \"A:\\\\webinar\\\\React - GoIT\\\\Projekty na GitHuba\\\\goit-react-hw-04-feedback\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const total = () => good + neutral + bad;\n\n  const positive = () => Math.floor(good / (total() || 1) * 100);\n\n  const handleBtnClick = event => {\n    switch (event.target.dataset.name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevNeut => prevNeut + 1);\n        break;\n\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n\n      default:\n        throw new Error('Unknown option');\n    }\n  };\n\n  const currentTotal = total();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        feedbackLeaveHandler: handleBtnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), (currentTotal || null) && /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Statistics\",\n      children: /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: currentTotal,\n        positive: positive()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["A:/webinar/React - GoIT/Projekty na GitHuba/goit-react-hw-04-feedback/src/components/App.jsx"],"names":["React","useState","Fragment","Section","Statistics","FeedbackOptions","App","good","setGood","neutral","setNeutral","bad","setBad","total","positive","Math","floor","handleBtnClick","event","target","dataset","name","prevGood","prevNeut","prevBad","Error","currentTotal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMY,KAAK,GAAG,MAAMN,IAAI,GAAGE,OAAP,GAAiBE,GAArC;;AACA,QAAMG,QAAQ,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAYT,IAAI,IAAIM,KAAK,MAAM,CAAf,CAAL,GAA0B,GAArC,CAAvB;;AAEA,QAAMI,cAAc,GAAGC,KAAK,IAAI;AAC9B,YAAQA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,IAA7B;AACE,WAAK,MAAL;AACEb,QAAAA,OAAO,CAACc,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAP;AACA;;AAEF,WAAK,SAAL;AACEZ,QAAAA,UAAU,CAACa,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAV;AACA;;AAEF,WAAK,KAAL;AACEX,QAAAA,MAAM,CAACY,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAN;AACA;;AAEF;AACE,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AAdJ;AAgBD,GAjBD;;AAmBA,QAAMC,YAAY,GAAGb,KAAK,EAA1B;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,oBAAoB,EAAEI;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIG,CAACS,YAAY,IAAI,IAAjB,kBACC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,YAAf;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAEnB,IADR;AAEE,QAAA,OAAO,EAAEE,OAFX;AAGE,QAAA,GAAG,EAAEE,GAHP;AAIE,QAAA,KAAK,EAAEe,YAJT;AAKE,QAAA,QAAQ,EAAEZ,QAAQ;AALpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/CD;;GAAMR,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\n\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const total = () => good + neutral + bad;\n  const positive = () => Math.floor((good / (total() || 1)) * 100);\n\n  const handleBtnClick = event => {\n    switch (event.target.dataset.name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevNeut => prevNeut + 1);\n        break;\n\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n\n      default:\n        throw new Error('Unknown option');\n    }\n  };\n\n  const currentTotal = total();\n\n  return (\n    <Fragment>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions feedbackLeaveHandler={handleBtnClick} />\n      </Section>\n      {(currentTotal || null) && (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={currentTotal}\n            positive={positive()}\n          />\n        </Section>\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}